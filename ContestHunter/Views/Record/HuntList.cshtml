@model ContestHunter.Models.View.HuntListModel
@using ContestHunter.Models.Domain
@{
    ViewBag.Title = "猎杀列表";
    ViewBag.Title = "Record";
}

<style type="text/css">
    .table {
        background-color: white;
        color: black;
        margin: 0px;
    }

        .table th,
        .table td {
            text-align: center;
            vertical-align: middle;
            
        }
</style>

<div class="span12">
    @using (Html.BeginForm("HuntList", "Record", FormMethod.Get, new { id = "frmList" }))
    {
        <div class="alert alert-info" style="margin-top: 20px; padding: 0px">
            <div class="form-search" style="text-align: right; margin: 0px 5px">
                <h4 style="float: left;  font-weight: normal;">猎杀列表</h4>
                <div style="float: right; margin-top: 5px">
                    @Html.TextBoxFor(x => x.UserName, new { @class = "input-small search-query", placeholder = "用户名" })
                    @Html.TextBoxFor(x => x.ProblemName, new { @class = "input-small search-query", placeholder = "题目名称" })
                    @Html.TextBoxFor(x => x.ContestName, new { @class = "input-small search-query", placeholder = "比赛名称" })
                    @Html.DropDownListFor(x => x.Status, new SelectListItem[]
                        {
                            new SelectListItem{Text="状态",Value=""},
                            new SelectListItem{Text="猎杀成功",Value="Success"},
                            new SelectListItem{Text="猎杀失败",Value="Fail"},
                            new SelectListItem{Text="数据不合法",Value="BadData"},
                            new SelectListItem{Text="编译错误",Value="CompileError"},
                            new SelectListItem{Text="正在测评",Value="Pending"},
                            new SelectListItem{Text="数据校验器崩溃",Value="DataCheckerError"},
                            new SelectListItem{Text="被他人抢先Hunt",Value="HackedByOther"}
                        }, new { @class = "input-small" })
                    <input type="submit" class="btn btn-primary btn-small" value="查询" />
                </div>
                <div style="clear: both"></div>
            </div>
            <table class="table table-bordered table-striped table-hover">
                <colgroup>
                    <col style="width: 260px">
                    <col style="width: 150px">
                    <col style="width: 300px">
                    <col style="width: 60px">
                    <col style="width: 170px">
                </colgroup>
                <thead>
                    <tr>
                        <th>题目名称</th>
                        <th>评测结果</th>
                        <th>猎杀者/被猎杀</th>
                        <th>得分</th>
                        <th>提交时间</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var hunt in Model.Hunts)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(hunt.Problem, "Show", "Problem", new { id = hunt.Problem, contest = hunt.Contest }, null)
                            </td>
                            <td>
                                @switch (hunt.Status)
                                {
                                    case Hunt.StatusType.BadData:
                                        ViewBag.Label = "";
                                        ViewBag.Text = "数据不合法";
                                        ViewBag.Score = 0;
                                        break;
                                    case Hunt.StatusType.CompileError:
                                        ViewBag.Label = "";
                                        ViewBag.Text = "编译错误";
                                        ViewBag.Score = 0;
                                        break;
                                    case Hunt.StatusType.Fail:
                                        ViewBag.Label = "label-important";
                                        ViewBag.Text = "猎杀失败";
                                        ViewBag.Score = -25;
                                        break;
                                    case Hunt.StatusType.Pending:
                                        ViewBag.Label = "label-warning";
                                        ViewBag.Text = "正在测评";
                                        ViewBag.Score = 0;
                                        break;
                                    case Hunt.StatusType.Success:
                                        ViewBag.Label = "label-success";
                                        ViewBag.Text = "猎杀成功";
                                        ViewBag.Score = 100;
                                        break;
                                    case Hunt.StatusType.HackedByOther:
                                        ViewBag.Label = "";
                                        ViewBag.Text = "被他人抢先Hunt";
                                        ViewBag.Score = 0;
                                        break;
                                    case Hunt.StatusType.DataCheckerError:
                                        ViewBag.Label = "";
                                        ViewBag.Text = "数据校验器崩溃";
                                        ViewBag.Score = 0;
                                        break;
                                    default:
                                        ViewBag.Label = "label-inverse";
                                        ViewBag.Text = "其他错误";
                                        ViewBag.Score = 0;
                                        break;
                                }
                                @Html.ActionLink((string)ViewBag.Text, "HuntResult", new { id = hunt.ID }, new { @class = "label " + ViewBag.Label, style = "font-size: 15px" })
                            </td>
                            <td>
                                @Html.UserLink(hunt.User) → @Html.UserLink(hunt.UserBeHunted)
                            </td>
                            <td>
                                @if (ViewBag.Score > 0)
                                {
                                    <span style="color: green"><b>@ViewBag.Score</b></span>
                                }
                                else
                                {
                                    <span style="color: gray"><b>@ViewBag.Score</b></span>
                                }
                            </td>
                            <td>@hunt.Time</td>
                        </tr>
                    }
                </tbody>
            </table>
            @if (Model.PageCount > 1)
            {
                <div class="pagination" style="text-align: center; margin: 3px">
                    @Html.HiddenFor(x => x.PageIndex)
                    <script>
                        function ChangePage(index) {
                            $('#PageIndex').val(index);
                            $('#frmList').submit();
                        }
                    </script>
                    <ul>
                        @if (Model.PageIndex != 0)
                        {
                            <li><a href="javascript:ChangePage(0)">«</a></li>
                        }
                        @for (int i = Math.Max(0, Model.PageIndex - 5); i < Math.Min(Model.PageCount, Model.PageIndex + 5); i++)
                        {
                            if (i == Model.PageIndex)
                            {
                            <li class="active"><a href="javascript:ChangePage( @i )">@(i + 1)</a></li>
                            }
                            else
                            {
                            <li><a href="javascript:ChangePage( @i )">@(i + 1)</a></li>
                            }
                        }
                        @if (Model.PageIndex != Model.PageCount - 1)
                        {
                            <li><a href="javascript:ChangePage(@(Model.PageCount - 1))">»</a></li>
                        }
                    </ul>
                </div>
            }
        </div>
    }
</div>
