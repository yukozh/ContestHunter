@model ContestHunter.Models.View.UserEditModel
@{
    ViewBag.Title = "编辑我的个人信息";
}
<script>
    function CheckPassword() {
        if ($('#NewPassword').val() != $('#NewPasswordAgain').val()) {
            $('#pwdAgain').text('两次输入的密码不匹配')
            $('#pwdAgain')
                .removeClass('field-validation-valid')
                .addClass('field-validation-error');
            RefreshValidationMessage();
            return false;
        } else {
            $('#pwdAgain')
                .addClass('field-validation-valid')
                .removeClass('field-validation-error');
            RefreshValidationMessage();
        }
    }
</script>
<div class="span12">
    <div class="alert alert-info" style="margin-top: 20px">
        <h2 style="text-align: center">编辑我的个人信息</h2>
        @using (Html.BeginForm("Edit", "User", FormMethod.Post, new
        {
            @class = "form-horizontal",
            style = "width:600px; margin:auto",
            onsubmit = "return CheckPassword();"
        }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Email)
            <div class="control-group">
                @Html.LabelFor(x => x.OldPassword, new { @class = "control-label" })
                <div class="controls">
                    @Html.PasswordFor(x => x.OldPassword, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.OldPassword)
                    @Html.DescriptionFor(x => x.OldPassword, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.NewPassword, new { @class = "control-label" })
                <div class="controls">
                    @Html.PasswordFor(x => x.NewPassword, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.NewPassword)
                    @Html.DescriptionFor(x => x.NewPassword, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.Label("NewPasswordAgain", "重复新密码", new { @class = "control-label" })
                <div class="controls">
                    @Html.Password("NewPasswordAgain", "", new { @class = "input-xlarge" })
                    @Html.ValidationMessage("NewPasswordAgain", new { id = "pwdAgain" })
                    <p class="help-block">请再次输入新密码</p>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">我的头像</label>
                <div class="controls">
                    @Html.Gravatar(Model.Email, 200)
                    <p class="help-block">您可以访问<a href="http://gravatar.com/">Gravatar</a>，为您的邮箱 <a href="mailto:@Model.Email" style="color:green;">@Model.Email</a> 绑定或修改头像。之后您设置的头像会自动出现在这里。</p>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.RealName, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(x => x.RealName, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.RealName)
                    @Html.DescriptionFor(x => x.RealName, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">地理位置</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.Country, new { @class = "input-mini", placeholder = "国家" })
                    @Html.TextBoxFor(x => x.Province, new { @class = "input-mini", placeholder = "省份" })
                    @Html.TextBoxFor(x => x.City, new { @class = "input-mini", placeholder = "城市" })
                    @Html.TextBoxFor(x => x.School, new { @class = "input-mini", placeholder = "学校" })
                    <p class="help-block">此部分可以选填</p>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.Motto, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextAreaFor(x => x.Motto, new { @class = "input-xlarge", style = "height:100px;" })
                    @Html.ValidationMessageFor(x => x.Motto)
                    @Html.DescriptionFor(x => x.Motto, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.ReceiveEmail, new { @class = "control-label" })
                <div class="controls">
                    @Html.CheckBoxFor(x => x.ReceiveEmail)
                    @Html.ValidationMessageFor(x => x.ReceiveEmail)
                    @Html.DescriptionFor(x => x.ReceiveEmail, new { @class = "help-block" })
                </div>
            </div>
            <div style="text-align: center">
                <input class="btn btn-primary" value="确认修改" type="submit">
            </div>
        }
    </div>
</div>
