@model ContestHunter.Models.Domain.Problem
@using ContestHunter.Models.Domain
@{
    ViewBag.Title = Model.Name;
    ViewBag.ActivedNav = "Contest";
}

<style type="text/css">
    .table td, .table th {
        text-align: center;
    }
</style>

<div class="span12">
    <div style="width: 940px; text-align: center">
        <h3>@Model.Name</h3>
        <table class="table table-striped table-bordered" style="background-color: white; width: 400px; margin: 10px auto">
            <colgroup>
                <col style="width: 100px">
                <col style="width: 100px">
                <col style="width: 100px">
                <col style="width: 100px">
            </colgroup>
            <tbody>
                <tr>
                    <th>总时限</th>
                    <td>@(Math.Round(ViewBag.TotalTimeLimit / 1000.0, 1))s</td>
                    <th>内存限制</th>
                    <td>
                        @if (ViewBag.MinimumMemoryLimit == ViewBag.MaximumMemoryLimit)
                        {
                            @(ViewBag.MinimumMemoryLimit / 1024 / 1024)@:MB
                        }
                        else
                        {
                            @(ViewBag.MinimumMemoryLimit / 1024 / 1024)@:~@(ViewBag.MaximumMemoryLimit / 1024 / 1024)
                        }
                    </td>
                </tr>
                <tr>
                    <th>出题人</th>
                    <td>@Html.UserLink(Model.Owner)</td>
                    <th>提交情况</th>
                    <td>
                        <code>
                            @try
                            {
                                Problem.ProblemStatus status = Model.Status();
                                @status.PassedUsers@:/@status.SubmitUsers
                            }
                            catch { }
                        </code>
                    </td>
                </tr>
                @if (Contest.ByName(Model.Contest).Type == Contest.ContestType.CF)
                {
                    <tr>
                        <th>初始分值</th>
                        <td>@Model.OriginRating</td>
                        <th>锁定情况</th>
                        <td>
                            @if (Model.IsLock())
                            {
                                @:已锁定
                            }
                            else
                            {
                                using (Html.BeginForm("Lock", "Problem", new { id = Model.Name, contest = Model.Contest }, FormMethod.Post, new { style = "margin:0;", onsubmit = "return confirm('锁定此题后，您将可以Hunt其他参赛者的代码，但不能再修改该题代码，确实要锁定吗？');" }))
                                {
                                @Html.AntiForgeryToken()
                                <input type="submit" value="锁定该题" class="btn btn-danger btn-small" />
                                }
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div style="width: 980px">@Html.Sanitized(Model.Content)</div>
    <div class="btn-group" style="margin: 10px auto; text-align: center">
        @Html.ActionLink("提交", "Submit", "Problem", new { id = Model.Name, contest = Model.Contest }, new { @class = "btn btn-success", style = "display:inline-block;" })
        @Html.ActionLink("状态", "Index", "Record", new { ProblemName = Model.Name, ContestName = Model.Contest }, new { @class = "btn btn-info", style = "display:inline-block;" })
        @Html.ActionLink("数据", "TestCaseList", "Problem", new { id = Model.Name, contest = Model.Contest }, new { @class = "btn btn-warning", style = "display:inline-block;" })
        @Html.ActionLink("返回比赛", "Show", "Contest", new { id = Model.Contest }, new { @class = "btn btn-primary", style = "display:inline-block;" })
    </div>
</div>
