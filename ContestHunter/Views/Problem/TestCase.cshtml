@model ContestHunter.Models.View.TestCaseUploadModel
@{
    ViewBag.Title = "配置测试数据";
    ViewBag.ActivedNav = "Contest";
}

<style type="text/css">
    .table {
        background-color: white;
        font-family: 微软雅黑;
        color: black;
        margin: 10px auto;
    }

        .table td, .table th {
            text-align: center;
            vertical-align: middle;
        }

    h4, h5 {
        font-family: 微软雅黑;
        font-weight: normal;
    }

    .inputmini {
        width: 50px;
        padding-top: 0px!important;
        padding-bottom: 0px!important;
        margin: 0px!important;
        margin-right: 5px!important;
    }
</style>

<div class="span12" style="margin-top: 20px; padding: 10px">
    @using (Html.BeginForm("TestCase", "Problem", FormMethod.Post, new { id = "frmUpload", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.Action)
        @Html.HiddenFor(x => x.Contest)
        @Html.HiddenFor(x => x.Problem)
        @Html.HiddenFor(x => x.TestCaseIndex)
        <div class="alert alert-info" style="text-align: center">
            <h2>配置测试数据</h2>
            <div>
                <div class="progress progress-striped progress-success active">
                    <div class="bar" style="width: 60%;"></div>
                </div>
            </div>
            <fieldset>
                <legend>已经上传的测试数据</legend>
                <div class="alert">
                    鼠标悬停于输入/输出文件列，可查看文件内容预览
                </div>
                <table class="table table-bordered table-striped table-hover">
                    <colgroup>
                        <col>
                        <col>
                        <col>
                        <col>
                        <col>
                    </colgroup>
                    <thead>
                        <tr>
                            <th>输入文件 CRC-32/大小</th>
                            <th>输出文件 CRC-32/大小</th>
                            <th>时间限制</th>
                            <th>内存限制</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.TestCases.Count; i++)
                        {
                            @Html.HiddenFor(x => x.TestCases[i].ID)
                            <tr>
                                <td data-content="&lt;pre&gt;@Model.TestCases[i].Input&lt;/pre&gt;" title="输入文件内容预览" class="Preview">
                                    @Html.HiddenFor(x => x.TestCases[i].InputHash)
                                    @Html.HiddenFor(x => x.TestCases[i].InputSize)
                                    <b>@Model.TestCases[i].InputHash</b> / <b>@Model.TestCases[i].InputSize</b>bytes
                                </td>
                                <td data-content="&lt;pre&gt;@Model.TestCases[i].Output&lt;/pre&gt;" title="输出文件内容预览" class="Preview">
                                    @Html.HiddenFor(x => x.TestCases[i].OutputHash)
                                    @Html.HiddenFor(x => x.TestCases[i].OutputSize)
                                    <b>@Model.TestCases[i].OutputHash</b> / <b>@Model.TestCases[i].OutputSize</b>bytes
                                </td>
                                <td class="control-group">
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.TestCases[i].Time, new { @class = "inputmini" })
                                        @Html.DescriptionFor(x => x.TestCases[i].Time)
                                        @Html.ValidationMessageFor(x => x.TestCases[i].Time)
                                    </div>
                                </td>
                                <td>
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.TestCases[i].Memory, new { @class = "inputmini" })
                                        @Html.DescriptionFor(x => x.TestCases[i].Memory)
                                        @Html.ValidationMessageFor(x => x.TestCases[i].Memory)
                                    </div>
                                </td>
                                <td>
                                    <input type="submit" value="删除" class="btn btn-small btn-danger" onclick="$('#TestCaseIndex').val(@i); $('#Action').val('Delete');"/>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <script>
                    $('td.Preview').popover();
                </script>
            </fieldset>
            <fieldset class="form-horizontal" style="width: 80%; margin: 10px auto;">
                <legend>上传新的测试数据</legend>
                <div class="control-group">
                    @Html.LabelFor(x => x.File, new { @class = "control-label" })
                    <div class="controls">
                        <input type="file" name="File" />
                        @Html.ValidationMessageFor(x => x.File)
                        @Html.DescriptionFor(x => x.File)
                    </div>
                </div>
                <input type="submit" class="btn btn-warning" value="上传文件" onclick="$('#Action').val('Upload');" />
            </fieldset>
            <div class="btn-group">
                @Html.ActionLink("上一步", "Description", new { id = Model.Problem, contest = Model.Contest }, new { @class = "btn btn-primary", style = "display:inline-block;" })
                <input type="submit" class="btn btn-success" onclick="$('#Action').val('Next')" value="下一步" />
            </div>
        </div>
    }
</div>
