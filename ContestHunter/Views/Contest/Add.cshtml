@model ContestHunter.Models.View.ContestBasicInfoModel
@{
    ViewBag.Title = "添加比赛";
    ViewBag.ActivedNav = "Contest";
}

<style type="text/css">
    h5 {
        font-family: 微软雅黑;
        font-weight: normal;
    }

    .form-horizontal {
        width: 550px;
        margin: 10px auto;
        font-family: 微软雅黑;
    }

    .controls {
        text-align: left;
    }
</style>

<div class="span12" style="margin-top: 20px; padding: 10px">

    <div class="alert alert-info" style="text-align: center">
        <h2>比赛申办向导</h2>
        <div>
            <div class="progress progress-striped progress-success active">
                <div class="bar" style="width: 25%;"></div>
            </div>
        </div>
        <h5>本向导将引导您向系统中添加一场比赛</h5>
        @using (Html.BeginForm("Add", "Contest", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="control-group">
                @Html.LabelFor(x => x.Name, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(x => x.Name, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.Name)
                    @Html.DescriptionFor(x => x.Name, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.Owner1, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(x => x.Owner1, new { @class = "input-small", disabled = "disabled" })
                    @Html.TextBoxFor(x => x.Owner2, new { @class = "input-small" })
                    @Html.TextBoxFor(x => x.Owner3, new { @class = "input-small" })
                    @Html.ValidationMessageFor(x => x.Owner2)
                    @Html.ValidationMessageFor(x => x.Owner3)
                    @Html.DescriptionFor(x => x.Owner1)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.IsOfficial, new { @class = "control-label" })
                <div class="controls">
                    @Html.CheckBoxFor(x => x.IsOfficial)
                    @Html.ValidationMessageFor(x => x.IsOfficial)
                    @Html.DescriptionFor(x => x.IsOfficial)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.Type, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(x => x.Type, new SelectListItem[]
                        {
                            new SelectListItem{Text="OI - 赛时不显示结果，试题有部分分",Value="OI"},
                            new SelectListItem{Text="ACM/ICPC - 即时显示结果，计算罚时，试题无部分分",Value="ACM"},
                            new SelectListItem{Text="Codeforces - 提供Pretest并显示结果，动态分，支持Hunt",Value="CF"},
                        }, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.Type)
                    @Html.DescriptionFor(x => x.Type, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.StartTime, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(x => x.StartTime, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(x => x.StartTime)
                    @Html.DescriptionFor(x => x.StartTime)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">比赛时长</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.Hour, new { @class = "input-small" })
                    @Html.LabelFor(x => x.Hour)
                    @Html.TextBoxFor(x => x.Minute, new { @class = "input-small" })
                    @Html.LabelFor(x => x.Minute)
                    @Html.ValidationMessageFor(x => x.Hour)
                    @Html.ValidationMessageFor(x => x.Minute)
                </div>
            </div>
            <input type="submit" class="btn btn-primary" value="下一步">
        }
    </div>

</div>
